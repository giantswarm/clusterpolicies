
version: 2.1

orbs:
  architect: giantswarm/architect@2.9.0


jobs:
  verify:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - run:
          name: Install Make
          command: |
            sudo apt-get update && sudo apt-get install make
      - run:
          name: Make verify
          command: |
            make verify
  test-policies:
    machine: true
    environment:
      KIND_VERSION: v0.10.0
      KUBERNETES_VERSION: v1.19.7
    steps:
      - checkout
      - run:
          name: Download kind
          command: |
            curl -sLo kind https://github.com/kubernetes-sigs/kind/releases/download/$KIND_VERSION/kind-linux-amd64
      - run:
          name: Download kubectl
          command: |
            curl -sLO https://storage.googleapis.com/kubernetes-release/release/$KUBERNETES_VERSION/bin/linux/amd64/kubectl && chmod +x kind kubectl
      - run:
          name: Create cluster
          command: |
            ./kind create cluster --image quay.io/giantswarm/kind-node:$KUBERNETES_VERSION --name kyverno-cluster  2> /dev/null
      - run:
          name: Wait for the cluster node to be ready
          command: |
            ./kubectl wait nodes/kyverno-cluster-control-plane --for=condition=ready --timeout=5m > /dev/null
            ./kind get kubeconfig --name kyverno-cluster > ./kube.config
      - run:
          name: Install Kyverno
          command: |
            ./kubectl create -f https://raw.githubusercontent.com/kyverno/kyverno/main/definitions/release/install.yaml > /dev/null
      - run:
          name: Install Giantswarm CRDs
          command: |
            ./kubectl create -f https://raw.githubusercontent.com/giantswarm/apiextensions/b9a6bed05850045530eaf8ba7fd01941de6c8525/helm/crds-common/templates/giantswarm.yaml > /dev/null
      - run:
          name: Install CAPI Cluster CRD
          command: |
            ./kubectl create -f https://raw.githubusercontent.com/kubernetes-sigs/cluster-api/master/config/crd/bases/cluster.x-k8s.io_clusters.yaml > /dev/null
            ./kubectl create -f https://raw.githubusercontent.com/kubernetes-sigs/cluster-api/master/config/crd/bases/cluster.x-k8s.io_machinedeployments.yaml > /dev/null
      - architect/run-tests-with-abs:
          chart_dir: "./helm/policies-common"
          app-build-suite_version: "v0.2.2"
          app-build-suite_container_tag: "0.2.2"
          additional_app-build-suite_flags: "--external-cluster-version $KUBERNETES_VERSION"


workflows:
  workflow:
    jobs:
      - verify
      - test-policies

      # Common
      - architect/push-to-app-catalog:
          name: push-policies-common-to-catalog
          app_catalog: control-plane-test-catalog
          app_catalog_test: control-plane-test-catalog
          attach_workspace: true
          chart: policies-common
          context: "architect"
          explicit_allow_chart_name_mismatch: true
          on_tag: false
          skip_helm_chart_linting: true
          requires:
            - test-policies
      # AWS
      - architect/push-to-app-catalog:
          name: push-policies-aws-to-catalog
          app_catalog: control-plane-test-catalog
          app_catalog_test: control-plane-test-catalog
          attach_workspace: true
          chart: policies-aws
          context: "architect"
          explicit_allow_chart_name_mismatch: true
          on_tag: false
          skip_helm_chart_linting: true
          requires:
            - test-policies
      # Azure
      - architect/push-to-app-catalog:
          name: push-policies-azure-to-catalog
          app_catalog: control-plane-test-catalog
          app_catalog_test: control-plane-test-catalog
          attach_workspace: true
          chart: policies-azure
          context: "architect"
          explicit_allow_chart_name_mismatch: true
          on_tag: false
          skip_helm_chart_linting: true
          requires:
            - test-policies
