apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: core-capi-policy
spec:
  background: false
  rules:
  - name: cluster-label
    match:
      resources:
        kinds:
        - cluster.x-k8s.io/v1alpha3/Cluster
    context:
    - name: release
      apiCall:
        urlPath: "/apis/release.giantswarm.io/v1alpha1/releases"
        jmesPath: "items[?metadata.name == 'v{{ request.object.metadata.labels.\"release.giantswarm.io/version\" }}'] | [0]"
    preconditions:
      any:
      - key: "{{ request.object.metadata.labels.\"release.giantswarm.io/version\" }}"
        operator: Equals
        value: "20.0.0"
    mutate:
      patchStrategicMerge:
        metadata:
          labels:
            +(cluster.x-k8s.io/watch-filter): "capi"
            cluster.x-k8s.io/watch-filter: "capi"
            +(cluster-apps-operator.giantswarm.io/version): "{{ release.spec.components | [?name == 'cluster-apps-operator'].version | [0]}}"
            cluster-apps-operator.giantswarm.io/version: "{{ release.spec.components | [?name == 'cluster-apps-operator'].version | [0]}}"

  - name: core-label
    match:
      resources:
        kinds:
        - addons.cluster.x-k8s.io/v1alpha3/ClusterResourceSet
        - addons.cluster.x-k8s.io/v1alpha3/ClusterResourceSetBinding
        - bootstrap.cluster.x-k8s.io/v1alpha3/KubeadmConfig
        - bootstrap.cluster.x-k8s.io/v1alpha3/KubeadmConfigTemplate
        - controlplane.cluster.x-k8s.io/v1alpha3/KubeadmControlPlane
        - cluster.x-k8s.io/v1alpha3/Machine
        - cluster.x-k8s.io/v1alpha3/MachineDeployment
        - exp.cluster.x-k8s.io/v1alpha3/MachinePool
    exclude:
      resources:
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    context:
    - name: releaseVersion
      apiCall:
        urlPath: "/apis/cluster.x-k8s.io/v1alpha3/namespaces/{{ request.object.metadata.namespace }}/clusters"
        jmesPath: "items[?metadata.name == '{{request.object.metadata.labels.\"cluster.x-k8s.io/cluster-name\"}}'].metadata.labels.\"release.giantswarm.io/version\" | [0]"
    preconditions:
      any:
      - key: "{{ releaseVersion }}"
        operator: Equals
        value: "20.0.0"
    mutate:
      patchStrategicMerge:
        metadata:
          labels:
            +(cluster.x-k8s.io/watch-filter): "capi"
            cluster.x-k8s.io/watch-filter: "capi"

  - name: kubeadmconfigtemplate-defaults
    match:
      resources:
        kinds:
        - bootstrap.cluster.x-k8s.io/v1alpha3/KubeadmConfigTemplate
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    mutate:
      patchStrategicMerge:
        spec:
          template:
            spec:
              joinConfiguration:
                nodeRegistration:
                  kubeletExtraArgs:
                    healthz-bind-address: 0.0.0.0
              postKubeadmCommands:
                - 'kubectl --kubeconfig=/etc/kubernetes/admin.conf label node {{ ds.meta_data.local_hostname }} node-role.kubernetes.io/worker=""'
  - name: kubeadmconfig
    match:
      resources:
        kinds:
        - bootstrap.cluster.x-k8s.io/v1alpha3/KubeadmConfig
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    mutate:
      patchStrategicMerge:
        spec:
          template:
            spec:
              joinConfiguration:
                nodeRegistration:
                  kubeletExtraArgs:
                    healthz-bind-address: 0.0.0.0
              postKubeadmCommands:
                - 'kubectl --kubeconfig=/etc/kubernetes/admin.conf label node {{ ds.meta_data.local_hostname }} node-role.kubernetes.io/worker=""'

  - name: kubeadmcontrolplane-defaults
    match:
      resources:
        kinds:
        - controlplane.cluster.x-k8s.io/v1alpha3/KubeadmControlPlane
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    mutate:
      patchStrategicMerge:
        spec:
          kubeadmConfigSpec:
            clusterConfiguration:
              controllerManager:
                extraArgs:
                  bind-address: 0.0.0.0
              scheduler:
                extraArgs:
                  bind-address: 0.0.0.0
            initConfiguration:
              nodeRegistration:
                kubeletExtraArgs:
                  healthz-bind-address: 0.0.0.0
