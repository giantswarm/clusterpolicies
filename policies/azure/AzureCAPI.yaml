apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: azure-capi-policy
spec:
  background: false
  rules:
  - name: azure-label
    match:
      resources:
        kinds:
        - infrastructure.cluster.x-k8s.io/v1alpha4/AzureCluster
        - infrastructure.cluster.x-k8s.io/v1alpha4/AzureMachine
        - infrastructure.cluster.x-k8s.io/v1alpha4/AzureMachineTemplate
        - infrastructure.cluster.x-k8s.io/v1alpha4/AzureMachinePool
        - infrastructure.cluster.x-k8s.io/v1alpha4/AzureMachinePoolMachine
        - infrastructure.cluster.x-k8s.io/v1alpha4/AzureManagedCluster
        - infrastructure.cluster.x-k8s.io/v1alpha4/AzureManagedControlplane
        - infrastructure.cluster.x-k8s.io/v1alpha4/AzureManagedMachinePool
        - infrastructure.cluster.x-k8s.io/v1alpha4/AzureClusterIdentity
    context:
    - name: releaseVersion
      apiCall:
        urlPath: "/apis/cluster.x-k8s.io/v1alpha4/namespaces/{{ request.object.metadata.namespace }}/clusters"
        jmesPath: "items[?metadata.name == '{{request.object.metadata.labels.\"cluster.x-k8s.io/cluster-name\"}}'].metadata.labels.\"release.giantswarm.io/version\" | [0]"
    preconditions:
      any:
      - key: "{{ releaseVersion }}"
        operator: Equals
        value: "20.0.0"
    mutate:
      patchStrategicMerge:
        metadata:
          labels:
            +(cluster.x-k8s.io/watch-filter): "capi"
            cluster.x-k8s.io/watch-filter: "capi"
  - name: kubeadmcontrolplane-enable-allocate-node-cidrs
    match:
      resources:
        kinds:
          - controlplane.cluster.x-k8s.io/v1alpha3/KubeadmControlPlane
          - controlplane.cluster.x-k8s.io/v1alpha4/KubeadmControlPlane
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    mutate:
      patchStrategicMerge:
        spec:
          kubeadmConfigSpec:
            clusterConfiguration:
              controllerManager:
                extraArgs:
                  allocate-node-cidrs: "true"
  - name: ensure-location
    match:
      resources:
        kinds:
          - infrastructure.cluster.x-k8s.io/v1alpha4/AzureCluster
          - infrastructure.cluster.x-k8s.io/v1alpha4/AzureMachinePool
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    mutate:
      patchStrategicMerge:
        spec:
          location: [[ .Values.location ]]
  # This rule is going to be replaced by one looking for subscription ID in the organization secret directly.
  # Currently blocked by the lack of base64decode in kyverno.
  - name: ensure-subscription
    match:
      resources:
        kinds:
          - infrastructure.cluster.x-k8s.io/v1alpha4/AzureCluster
        selector:
          matchLabels:
            cluster.x-k8s.io/watch-filter: capi
    context:
      - name: subscriptionID
        apiCall:
          urlPath: "/apis/security.giantswarm.io/v1alpha1/organization"
          jmesPath: "items[?metadata.name == '{{request.object.metadata.labels.\"giantswarm.io/organization\"}}'].metadata.annotations.subscriptionid | [0]"
    mutate:
      patchStrategicMerge:
        spec:
          subscriptionID: "{{ subscriptionID }}"
